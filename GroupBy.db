CREATE TABLE employee (
    emp_id SERIAL PRIMARY KEY,
    name VARCHAR(50),
    department VARCHAR(50),
    salary INT,
    hire_date DATE
);

INSERT INTO employee(name, department, salary, hire_date)
        VALUES('sinan','IT', 60000, '2020-01-10'),
            ('nishad','Hr', 50000, '2020-04-21'),
            ('affan','finance', 40000, '2020-06-30'),
            ('afnas','IT', 20000, '2020-02-01'),
            ('fazlu','G-sap', 210000, '2020-12-13'),
            ('vishnu','React', 93000, '2020-10-28');



#------ Basic

SELECT department, COUNT(*) AS total_emp                            # Number of employees in each department
FROM employee
GROUP BY department;


#------ Group By with sum

SELECT department, SUM(salary) AS total_salary                      # Total salary paid per department
FROM employee
GROUP BY department;


#------ Group By with AVG, MIN, MAX

SELECT department,                                                  # Average, Min, and Max salary per department
    AVG(salary) AS avg_salary,
    MIN(salary) AS min_salary,
    MAX(salary) AS max_salary
FROM employee
GROUP BY department;


#------ Group By with Multiple Columns

SELECT department, EXTRACT(YEAR FROM hire_date) AS hire_year, COUNT(*) AS emp_count       # Count employees per department and hire year
FROM employee
GROUP BY department, hire_year;



#------ Group By with WHERE

SELECT department, COUNT(*) AS total_emp                            # Count IT employees only
FROM employee
WHERE department = 'IT'
GROUP BY department;



#------ Group By with HAVING

SELECT department, COUNT(*) AS total_emp                            # Departments with more than 1 employee
FROM employee
GROUP BY department
HAVING COUNT(*) > 1;


#------ Group By with CASE

SELECT                                                              # Group employees by salary category
    CASE
        WHEN salary >= 70000 THEN 'High'
        WHEN salary >= 50000 THEN 'Medium'
        ELSE 'Low'
    END AS salary_group,
    COUNT(*) AS total_emp
FROM employee
GROUP BY salary_group;


#------ Group By with ORDER BY

SELECT department, SUM(salary) AS total_salary                      # Order departments by their total salary (highest first)
FROM employee
GROUP BY department
ORDER BY total_salary DESC;


#------ Group By with Subquery

SELECT department, SUM(salary) AS dep_salary                        # Departments where total salary is above average total salary
FROM employee
GROUP BY department
HAVING SUM(salary) > (
    SELECT AVG(salary) FROM employee
);



